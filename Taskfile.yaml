---
version: "3"

vars:
  MODULE: github.com/stuttgart-things/machineShop
  PROJECT_NAME:
    sh: echo ${PWD##*/}
  MAJOR:
    sh: git describe --tags --abbrev=0 | cut -d "." -f1
  MINOR:
    sh: git describe --tags --abbrev=0 | cut -d "." -f2
  PATCH:
    sh: git describe --tags --abbrev=0 | cut -d "." -f3
  GIT_COMMIT:
    sh: git log -n 1 --format=%h
  VERSION:
    sh: git describe --tags --abbrev=0
  DATE:
    sh: date +"%Y.%m%d.%H%M"
  UPDATED_TAG:
    sh: old_tag=$(git describe --tags --abbrev=0 | cut -d "." -f3); new_tag=$((old_tag+1)); echo $new_tag
  UPDATED_TAG_VERSION:
    sh: t1=$(git describe --tags --abbrev=0 | cut -f1 -d'.'); t2=$(git describe --tags --abbrev=0 | cut -f2 -d'.'); echo $t1.$t2.{{.UPDATED_TAG}}
  BRANCH:
    sh: if [ $(git rev-parse --abbrev-ref HEAD) != "main" ]; then echo $(git rev-parse --abbrev-ref HEAD) ; fi

tasks:

  run:
    desc: Run
    deps: [install]
    cmds:
      - go run main.go

  debug:
    desc: bla
    cmds:
      - echo {{ .BRANCH }}

  install:
    desc: Install
    deps: [lint, test]
    cmds:
      - go install -ldflags="-X {{ .MODULE }}/cmd.version=v{{ .MAJOR }}.{{ .MINOR }}.{{ .PATCH }} -X {{ .MODULE }}/cmd.date={{ .DATE }} -X {{ .MODULE }}/cmd.commit={{ .GIT_COMMIT }}"
      - "{{ .PROJECT_NAME }} terraform"

  lint:
    desc: Lint
    cmds:
      - cmd: golangci-lint run
        ignore_error: true

  test:
    desc: Test
    cmds:
      - go mod tidy
      - go test -v

  tag:
    desc: Commit, push & tag the module
    deps: [lint]
    cmds:
      - rm -rf ./dist
      - go mod tidy
      - git pull
      - git add *
      - git commit -am 'updated {{ .PROJECT_NAME }} {{ .DATE }} for tag version {{ .UPDATED_TAG_VERSION }}'
      - git push
      - git tag -a {{ .UPDATED_TAG_VERSION }} -m 'updated for stuttgart-things {{ .DATE }} for tag version {{ .UPDATED_TAG_VERSION }}'
      - git push origin --tags

  release:
    desc: Relase binaries
    deps: [tag]
    cmds:
      - unset GITLAB_TOKEN
      - goreleaser healthcheck
      - goreleaser check
      # - "sed -i 's:^\[DEV\]\:.*$:\[DEV\]\: v0.1.1:g' README.md"
      - goreleaser release --skip-publish --snapshot --clean
      - goreleaser release --clean
      - rm -rf ./dist
